// <auto-generated />
using System;
using Core.BocaSuja.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Web.Api.BocaSuja.Migrations
{
    [DbContext(typeof(BocaSujaDbContext))]
    [Migration("20230812224306_EntidadeOfensora")]
    partial class EntidadeOfensora
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.7.23375.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.BocaSuja.Domain.Entities.Incidencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasComment("Identificador Guid da incidência.");

                    b.Property<DateTimeOffset>("DataHoraAtualizacao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Data_Hora_Atualizacao")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("SYSUTCDATETIME()")
                        .HasComment("Registra a data e hora em que a incidência foi atualizada. Usado para rastrear o momento em que a incidência foi atualizada. É mapeado como uma coluna do tipo datetimeoffset.");

                    b.Property<DateTimeOffset>("DataHoraCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Data_Hora_Criacao")
                        .HasColumnOrder(6)
                        .HasDefaultValueSql("SYSUTCDATETIME()")
                        .HasComment("Registra a data e hora em que a incidência foi criada. É usado para rastrear o momento em que a incidência ocorreu. É mapeado como uma coluna do tipo datetimeoffset.");

                    b.Property<Guid>("EntidadeOfensora")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Entidade_Ofensora")
                        .HasColumnOrder(1)
                        .HasComment("Indica a entidade associada à incidência, identificada por um GUID. Pode ser usada como chave estrangeira para relacionar a incidência a uma entidade específica em outra tabela.");

                    b.Property<byte>("Gravidade")
                        .HasColumnType("tinyint")
                        .HasColumnName("Gravidade")
                        .HasColumnOrder(4)
                        .HasComment("Representa a gravidade da incidência. Pode ser usado para atribuir um valor numérico que indica o nível de severidade da incidência, como uma pontuação.");

                    b.Property<bool>("Inativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Inativo")
                        .HasColumnOrder(8)
                        .HasComment("Registra se a incidência está inativa ou não, é registrada como um valor 0 para ativo e 1 para inativo.");

                    b.Property<string>("Recurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Recurso")
                        .HasColumnOrder(2)
                        .HasComment("Armazena o nome ou identificador do recurso relacionado à incidência. Por exemplo, pode ser o nome de um arquivo, um URL ou qualquer outra referência ao recurso ofensivo.");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Texto")
                        .HasColumnOrder(5)
                        .HasComment("Registra o texto que foi capturado pela incidência.");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("Tipo")
                        .HasColumnOrder(3)
                        .HasComment("Indica o tipo ou categoria da incidência. Pode ser usado para classificar as incidências de acordo com diferentes critérios. \"1 - Ódio\" || \"2 - Auto-Mutilação\" || \"3 - Sexual\" || \"4 - Violencia\" ");

                    b.HasKey("Id");

                    b.HasIndex("EntidadeOfensora");

                    b.ToTable("Incidencias", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
